<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jiggy</groupId>
  <artifactId>sample</artifactId>
  <packaging>war</packaging>
  <version>1.0</version>
  <name>sample Online Maven Webapp</name>

  <description>sample Online Maven Webapp.</description>
  <url>http://www.sample.jiggy-malkan.com</url>
  <inceptionYear>August 01, 2011</inceptionYear>

  <organization>
    <name>Jignesh Malkan</name>
    <url>http://www.jiggy-malkan.com</url>
  </organization>

  <ciManagement>
    <system>hudson</system>
    <url>http://localhost/hudson/view/sample</url>
  </ciManagement>

  <issueManagement>
    <system>JIRA</system>
    <url>https://localhost/jira/browse/sample</url>
  </issueManagement>

  <scm>
    <developerConnection>scm:git:ssh://git@github.com:jmalkan/sample.git</developerConnection>
    <url>https://github.com/jmalkan/sample.git</url>
  </scm>

  <repositories>
    <repository>
      <id>springsource-repo</id>
      <name>SpringSource Repository</name>
      <url>http://repo.springsource.org/release</url>
    </repository>
    <repository>
      <id>snapshots</id>
      <url>https://nexus.codehaus.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>searls-maven-thirdparty</id>
      <name>SpringSource Repository</name>
      <url>http://searls-maven-repository.googlecode.com/svn/trunk/thirdparty</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2/</url>
      <layout>default</layout>
    </pluginRepository>
    <pluginRepository>
      <id>codehaus public repository</id>
      <url>https://nexus.codehaus.org/content/groups/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <name>oss.sonatype.org</name>
      <id>oss.sonatype.org</id>
      <url>http://oss.sonatype.org/content/groups/public</url>
    </pluginRepository>
    <pluginRepository>
      <id>release-repository</id>
      <name>release repository</name>
      <url>http://localhost/nexus/content/groups/approved-repos/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <!-- repo for SNAPSHOT artifact distribution -->
    <snapshotRepository>
      <id>develop-snapshot</id>
      <name>Development Repository</name>
      <url>http://localhost/nexus/content/repositories/develop-snapshot/</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <java-version>1.7</java-version>
    <javax.mail-version>1.4.4</javax.mail-version>
    <javax.servlet-version>2.5</javax.servlet-version> <!-- 3.0.1 -->
    <javax.servlet-jsp-version>2.2</javax.servlet-jsp-version>
    
    <cglib-version>2.2.2</cglib-version>
    <rhino-version>1.7R2</rhino-version>
    <xerces-version>2.10.0</xerces-version>
    <commons.dbcp-version>1.4</commons.dbcp-version>
    <javassist-version>3.12.1.GA</javassist-version>
    <ant-contrib-version>20020829</ant-contrib-version>
    <apache.log4j.extras-version>1.1</apache.log4j.extras-version>
    <commons.collections-version>3.2.1</commons.collections-version>
    <commons.configuration-version>1.8</commons.configuration-version>
    <mysql.connector.java-version>5.1.21</mysql.connector.java-version>

    <org.slf4j-version>1.6.6</org.slf4j-version>
    <org.testng-version>6.7</org.testng-version>
    <org.hamcrest-version>1.3</org.hamcrest-version>
    <org.mockito-version>1.9.5-rc1</org.mockito-version>
    <org.apache.derby-version>10.9.1.0</org.apache.derby-version>
    <org.mortbay.jetty-version>8.1.5.v20120716</org.mortbay.jetty-version>
    <com.github.searls.jasmine-version>1.2.0.0</com.github.searls.jasmine-version>
    <org.dbmaintain.maven.plugins-version>2.4</org.dbmaintain.maven.plugins-version>

    <org.mongodb-version>2.8.0</org.mongodb-version>
    <org.aspectj-version>1.7.0</org.aspectj-version>
    <com.sun.jersey-version>1.13</com.sun.jersey-version>
    <org.hibernate-version>4.1.6.Final</org.hibernate-version>
    <org.springframework-version>3.1.2.RELEASE</org.springframework-version>
    <org.springframework.data-version>1.0.3.RELEASE</org.springframework.data-version>
    <org.eclipse.m2e.lifecycle-mapping-version>1.0.0</org.eclipse.m2e.lifecycle-mapping-version>

    <org.apache.shiro-version>1.2.1</org.apache.shiro-version>
    <org.apache.commons.lang3-version>3.1</org.apache.commons.lang3-version>
    <org.apache.maven.plugins.war-version>2.2</org.apache.maven.plugins.war-version>
    <org.apache.maven.plugins.jxr-version>2.3</org.apache.maven.plugins.jxr-version>
    <org.apache.maven.plugins.pmd-version>2.7.1</org.apache.maven.plugins.pmd-version>
    <org.apache.maven.plugins.antrun-version>1.7</org.apache.maven.plugins.antrun-version>
    <org.apache.maven.plugins.javadoc-version>2.8.1</org.apache.maven.plugins.javadoc-version>
    <org.apache.maven.plugins.compiler-version>2.5.1</org.apache.maven.plugins.compiler-version>
    <org.apache.maven.plugins.surefire-version>2.12.2</org.apache.maven.plugins.surefire-version>
    <org.apache.maven.plugins.failsafe-version>2.12.2</org.apache.maven.plugins.failsafe-version>
    <org.apache.maven.plugins.dependency-version>2.4</org.apache.maven.plugins.dependency-version>

    <org.codehaus.jackson-version>1.9.9</org.codehaus.jackson-version>
    <org.codehaus.mojo.plugins.tomcat-version>1.1</org.codehaus.mojo.plugins.tomcat-version>
    <org.codehaus.mojo.plugins.findbugs-version>2.5.1</org.codehaus.mojo.plugins.findbugs-version>
    <org.codehaus.mojo.plugins.cobertura-version>2.5.1</org.codehaus.mojo.plugins.cobertura-version>
    <org.codehaus.mojo.plugins.javascript-version>2.0.0-alpha-1</org.codehaus.mojo.plugins.javascript-version>

    <tomcat.ip>localhost:8080</tomcat.ip>
    <ci.server.ip>localhost</ci.server.ip>
    <mysql.ip>localhost:3306</mysql.ip>
    <mysql.userName>root</mysql.userName>
    <mysql.password>password</mysql.password>

    <jmvc.js.executable>js.bat</jmvc.js.executable>
    <jmvc.environment>development</jmvc.environment>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <!-- Servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${javax.servlet-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${javax.servlet-jsp-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>${javax.mail-version}</version>
    </dependency>
    <!-- Spring framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${org.springframework-version}</version>
      <exclusions>
        <!-- Exclude Commons Logging in favor of SLF4j -->
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <!-- Spring AOP + AspectJ -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${org.aspectj-version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${org.aspectj-version}</version>
    </dependency>
    <!-- Spring Web MVC Features -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <!-- Spring Security -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-taglibs</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-acl</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <!-- Spring Data - JDBC, MongoDB, ORM Features -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-mongodb</artifactId>
      <version>${org.springframework.data-version}</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>${commons.dbcp-version}</version>
    </dependency>
    <!-- MongoDB Driver -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${org.mongodb-version}</version>
    </dependency>
    <!-- Hibernate dependencies -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${org.hibernate-version}</version>
    </dependency>
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>${javassist-version}</version>
    </dependency>
    <!-- Apache Shiro Security -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${org.apache.shiro-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>${org.apache.shiro-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-aspectj</artifactId>
      <version>${org.apache.shiro-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-ehcache</artifactId>
      <version>${org.apache.shiro-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${org.apache.shiro-version}</version>
    </dependency>
    <!-- Jersey -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
      <version>${com.sun.jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>${com.sun.jersey-version}</version>
    </dependency>
    <!-- Misc -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>${cglib-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${org.slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${org.slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${org.slf4j-version}</version>
    </dependency> 
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>apache-log4j-extras</artifactId>
      <version>${apache.log4j.extras-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${org.apache.commons.lang3-version}</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${commons.collections-version}</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>${commons.configuration-version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${org.codehaus.jackson-version}</version>
    </dependency>
    <!-- Test scoped dependencies -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${org.testng-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${org.mockito-version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${org.springframework-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbytools</artifactId>
      <version>${org.apache.derby-version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>rhino</groupId>
      <artifactId>js</artifactId>
      <version>${rhino-version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-integration</artifactId>
      <version>${org.hamcrest-version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    
    <resources>
      <resource>
        <directory>src/main/javascript</directory>
        <filtering>false</filtering>
        <targetPath>${basedir}/target/${project.artifactId}</targetPath>
      </resource>
    </resources>
    
    <extensions>
      <extension>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javascript-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.plugins.javascript-version}</version>
      </extension>
    </extensions>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${org.apache.maven.plugins.compiler-version}</version>
        <configuration>
          <source>${java-version}</source>
          <target>${java-version}</target>
          <debug>true</debug>
          <maxmem>1024m</maxmem>
          <meminitial>512m</meminitial>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${org.apache.maven.plugins.war-version}</version>
        <configuration>
          <nonFilteredFileExtensions>
            <!-- default value contains jpg,jpeg,gif,bmp,png -->
            <nonFilteredFileExtension>jpg,jpeg,gif,bmp,png,jar</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
          <webResources>
            <resource>
              <directory>${basedir}/src/main/webapp</directory>
              <filtering>true</filtering>
            </resource>
          </webResources>
          <!-- customize manifest with maven and hudson build info -->
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <url>${pom.url}</url>
              <Built-OS>${os.name}</Built-OS>
              <Built-By>${user.name}</Built-By>
              <Build-Date>${timestamp}</Build-Date>
              <Implementation-Build>${buildNumber}</Implementation-Build>
              <Implementation-Title>${project.name}</Implementation-Title>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              <SCM>${buildNumber}</SCM>
              <hudson-build-shell>${env.SHELL}</hudson-build-shell>
              <hudson-build-id>${env.BUILD_ID}</hudson-build-id>
              <hudson-build-tag>${env.BUILD_TAG}</hudson-build-tag>
              <hudson-build-number>${env.BUILD_NUMBER}</hudson-build-number>
            </manifestEntries>
          </archive>
          <attachClasses>true</attachClasses>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.plugins.tomcat-version}</version>
        <configuration>
          <path>/${project.artifactId}</path>
          <url>http://${tomcat.ip}/manager/text</url>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.dbmaintain</groupId>
        <artifactId>dbmaintain-maven-plugin</artifactId>
        <version>${org.dbmaintain.maven.plugins-version}</version>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.java-version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <databases>
            <database>
              <dialect>mysql</dialect>
              <schemaNames>sample</schemaNames>
              <userName>${mysql.userName}</userName>
              <password>${mysql.password}</password>
              <url>jdbc:mysql://${mysql.ip}/sample</url>
              <driverClassName>com.mysql.jdbc.Driver</driverClassName>
            </database>
          </databases>
          <scriptLocations>src/main/scripts/db</scriptLocations>
          <autoCreateDbMaintainScriptsTable>true</autoCreateDbMaintainScriptsTable>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${org.apache.maven.plugins.javadoc-version}</version>
        <executions>
          <execution>
            <goals>
              <goal>javadoc</goal>
            </goals>
            <phase>compile</phase>
          </execution>
        </executions>
        <configuration>
          <show>public</show>
          <verbose>false</verbose>
          <!-- subpackages>com.jiggy.sample</subpackages -->
          <encoding>${project.build.sourceEncoding}</encoding>
          <!-- doclet>com.sun.jersey.wadl.resourcedoc.ResourceDoclet</doclet>
          <docletPath>${path.separator}${project.build.outputDirectory}</docletPath>
          <docletArtifacts>
            <docletArtifact>
              <groupId>com.sun.jersey.contribs</groupId>
              <artifactId>wadl-resourcedoc-doclet</artifactId>
              <version>${com.sun.jersey-version}</version>
            </docletArtifact -->
            <!-- Also specify jersey and xerces as doclet artifacts as the ResourceDoclet uses classes provided by them to generate the resourcedoc. -->
            <!-- docletArtifact>
              <groupId>com.sun.jersey</groupId>
              <artifactId>jersey-server</artifactId>
              <version>${com.sun.jersey-version}</version>
            </docletArtifact>
            <docletArtifact>
              <groupId>xerces</groupId>
              <artifactId>xercesImpl</artifactId>
              <version>${xerces-version}</version>
            </docletArtifact>
          </docletArtifacts -->
          <!-- the following option is required as a work around for version 2.5 of the javadoc plugin which will be used by a maven version > 2.0.9 -->
          <!-- useStandardDocletOptions>false</useStandardDocletOptions>
          <additionalparam>-output ${project.build.outputDirectory}/resourcedoc.xml</additionalparam -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.plugins.cobertura-version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${org.apache.maven.plugins.surefire-version}</version>
        <configuration>
          <parallel>methods</parallel>
          <threadCount>10</threadCount>
          <excludes>
            <exclude>**/*IntegTest.java</exclude>
          </excludes>
          <argLine>-XX:MaxPermSize=256m -Xms1024m -Xmx1024m -Djava.util.logging.config.file=${project.baseDir}/src/test/resources/logging.properties</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${org.apache.maven.plugins.failsafe-version}</version>
        <configuration>
          <parallel>methods</parallel>
          <threadCount>10</threadCount>
          <includes>
            <include>**/*IntegTest.java</include>
            <include>**/*IntegrationTest.java</include>
          </includes>
          <argLine>-XX:MaxPermSize=256m -Xms1024m -Xmx1024m -Djava.util.logging.config.file=${project.baseDir}/src/test/resources/logging.properties</argLine>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <version>${com.github.searls.jasmine-version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>generateManualRunner</goal>
              <goal>resources</goal>
              <goal>testResources</goal>
              <goal>test</goal>
              <goal>preparePackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jsSrcDir>src/main/javascript</jsSrcDir>
          <jsTestSrcDir>src/test/javascript</jsTestSrcDir>
        </configuration>
      </plugin-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${org.apache.maven.plugins.antrun-version}</version>
        <executions>
          <execution>
            <id>jmvc</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                <if>
                  <equals arg1="${jmvc.environment}" arg2="production" />
                  <then>
                    <echo>Compressing JMVC JavaScript into production.js</echo>
                    <exec dir="target/${project.artifactId}" executable="${basedir}/src/main/javascript/${jmvc.js.executable}" resolveexecutable="true" failonerror="true">
                      <arg value="-e" />
                      <arg value="apps/todos/scripts/build.js" />
                    </exec>
                    <fail message="app production.js failed to build">
                      <condition>
                        <not>
                          <available file="target/${project.artifactId}/apps/todos/production.js" />
                        </not>
                      </condition>
                    </fail>
                  </then>
                  <else>
                    <echo>Skipping JMVC compression</echo>
                  </else>
                </if>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>smoke</id>
            <phase>test</phase>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                <if>
                  <and>
                    <not>
                      <isset property="skipUITests" />
                    </not>
                    <not>
                      <equals arg1="${jmvc.environment}" arg2="production" />
                    </not>
                  </and>
                  <then>
                    <echo>UI Tests running</echo>
                    <!--exec dir="target/src" executable="../../src/javascript/${jmvc.js.executable}" resolveexecutable="true" failonerror="true">
                      <arg value="-e" />
                      <arg value="funcunit/run" />
                      <arg value="selenium" />
                      <arg value="http://localhost/static/bigsmoke.html" />
                      <arg value="-settings" />
                      <arg value="test/javascript/bigsmoke/settings.js" />
                    </exec-->
                  </then>
                  <else>
                    <echo>UI Tests skipped</echo>
                  </else>
                </if>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>${ant-contrib-version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>${org.eclipse.m2e.lifecycle-mapping-version}</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <versionRange>[2.4,)</versionRange>
                    <goals>
                      <goal>javadoc</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${org.apache.maven.plugins.javadoc-version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${org.apache.maven.plugins.surefire-version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${org.apache.maven.plugins.jxr-version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${org.apache.maven.plugins.pmd-version}</version>
        <configuration>
          <targetJdk>${java-version}</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.plugins.findbugs-version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${org.codehaus.mojo.plugins.cobertura-version}</version>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${org.apache.maven.plugins.dependency-version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.mortbay.jetty</groupId>
                  <artifactId>jetty-runner</artifactId>
                  <version>${org.mortbay.jetty-version}</version>
                  <destFileName>jetty-runner.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions> 
      </plugin -->
    </plugins>
  </reporting>
</project>